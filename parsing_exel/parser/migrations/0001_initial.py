# Generated by Django 4.2.4 on 2023-10-01 15:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Billboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(db_column='Город', max_length=20, verbose_name='Город')),
                ('surface_type', models.CharField(db_column='Тип поверхности', max_length=50, verbose_name='Тип поверхности')),
                ('lighting', models.CharField(choices=[('Да', 'Да'), ('Нет', 'Нет')], db_column='Осв', max_length=3, verbose_name='Освещение')),
                ('address', models.CharField(db_column='Адрес', max_length=250, verbose_name='Адрес')),
                ('latitude', models.FloatField(db_column='Широта', verbose_name='Широта')),
                ('longitude', models.FloatField(db_column='Долгота', verbose_name='Долгота')),
                ('product_restrictions', models.CharField(blank=True, choices=[('Алкогольные напитки', 'Алкогольные напитки'), ('Табачные изделия,Алкогольные напитки', 'Табачные изделия,Алкогольные напитки')], db_column='Ограничения по продукту', max_length=40, null=True, verbose_name='Ограничения по продукту')),
                ('district', models.CharField(blank=True, db_column='Городской округ', max_length=100, null=True, verbose_name='Городской округ')),
                ('permission', models.DateField(blank=True, db_column='Разрешение ПО', null=True, verbose_name='Разрешение ПО')),
                ('date_create', models.DateTimeField(auto_now_add=True, db_column='Дата создания', verbose_name='Дата создания')),
                ('date_update', models.DateTimeField(auto_now=True, db_column='Дата обновления', verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Билборд',
                'verbose_name_plural': 'Билборды',
                'db_table': 'Билборды',
            },
        ),
        migrations.CreateModel(
            name='ESPAR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ESPAR_code', models.CharField(db_column='Код ЭСПАР', max_length=20, verbose_name='Код ЭСПАР')),
                ('GRP', models.FloatField()),
                ('OTS', models.FloatField()),
                ('date_create', models.DateTimeField(auto_now_add=True, db_column='Дата создания', verbose_name='Дата создания')),
                ('date_update', models.DateTimeField(auto_now=True, db_column='Дата обновления', verbose_name='Дата обновления')),
                ('billboard', models.ForeignKey(db_column='ID Билборда', on_delete=django.db.models.deletion.CASCADE, to='parser.billboards', verbose_name='Город/адрес билборда')),
            ],
            options={
                'verbose_name': 'ESPAR',
                'verbose_name_plural': 'ESPAR',
                'db_table': 'ESPAR',
            },
        ),
        migrations.CreateModel(
            name='Sides',
            fields=[
                ('internal_code', models.CharField(db_column='Вн. код', max_length=20, primary_key=True, serialize=False, unique=True, verbose_name='Вн. код')),
                ('side', models.CharField(db_column='Сторона', max_length=6, verbose_name='Сторона')),
                ('price', models.DecimalField(blank=True, db_column='Прайс с НДС', decimal_places=2, max_digits=10, null=True, verbose_name='Прайс с НДС')),
                ('installation_price', models.DecimalField(blank=True, db_column='Монтаж. Прайс с НДС', decimal_places=2, max_digits=10, null=True, verbose_name='Монтаж. Прайс с НДС')),
                ('plywood_price', models.DecimalField(blank=True, db_column='Переклейка. Прайс с НДС', decimal_places=2, max_digits=10, null=True, verbose_name='Переклейка. Прайс с НДС')),
                ('photo_or_scheme', models.URLField(db_column='Фото/схема', verbose_name='Фото/схема')),
                ('digital_views', models.PositiveSmallIntegerField(blank=True, db_column='Диджитал кол-во показов', null=True, verbose_name='Диджитал кол-во показов')),
                ('media_material', models.CharField(blank=True, db_column='Материал носителя', max_length=100, null=True, verbose_name='Материал носителя')),
                ('technical_requirements', models.URLField(blank=True, db_column='Тех. требования', null=True, verbose_name='Тех. требования')),
                ('note', models.TextField(blank=True, db_column='Примечание', null=True, verbose_name='Примечание')),
                ('date_create', models.DateTimeField(auto_now_add=True, db_column='Дата создания', verbose_name='Дата создания')),
                ('date_update', models.DateTimeField(auto_now=True, db_column='Дата обновления', verbose_name='Дата обновления')),
                ('billboard', models.ForeignKey(db_column='ID Билборда', on_delete=django.db.models.deletion.CASCADE, to='parser.billboards', verbose_name='Город/Адрес билборда')),
            ],
            options={
                'verbose_name': 'Сторону',
                'verbose_name_plural': 'Стороны',
                'db_table': 'Стороны',
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(db_column='Год', verbose_name='Год')),
                ('month', models.CharField(db_column='Месяц', max_length=10, verbose_name='Месяц')),
                ('status', models.CharField(blank=True, db_column='Статус', max_length=400, null=True, verbose_name='Статус')),
                ('date_create', models.DateTimeField(auto_now_add=True, db_column='Дата создания', verbose_name='Дата создания')),
                ('date_update', models.DateTimeField(auto_now=True, db_column='Дата обновления', verbose_name='Дата обновления')),
                ('ESPAR', models.ForeignKey(db_column='Код ЭСПАР', on_delete=django.db.models.deletion.CASCADE, to='parser.espar', verbose_name='Код ЭСПАР')),
                ('billboard', models.ForeignKey(db_column='ID Билборда', on_delete=django.db.models.deletion.CASCADE, to='parser.billboards', verbose_name='Город/адрес билборда')),
                ('side', models.ForeignKey(db_column='Вн. код стороны', on_delete=django.db.models.deletion.CASCADE, to='parser.sides', verbose_name='Вн. код стороны')),
            ],
            options={
                'verbose_name': 'Продажу',
                'verbose_name_plural': 'Продажи',
                'db_table': 'Продажи',
            },
        ),
        migrations.AddField(
            model_name='espar',
            name='side',
            field=models.ForeignKey(db_column='Вн. код стороны', on_delete=django.db.models.deletion.CASCADE, to='parser.sides', verbose_name='Вн. код стороны'),
        ),
        migrations.AddIndex(
            model_name='billboards',
            index=models.Index(fields=['city', 'address'], name='address_idx'),
        ),
        migrations.AddIndex(
            model_name='billboards',
            index=models.Index(fields=['permission'], name='permission_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='billboards',
            unique_together={('latitude', 'longitude')},
        ),
        migrations.AddIndex(
            model_name='sides',
            index=models.Index(fields=['internal_code'], name='internal_code_idx'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['status'], name='status_idx'),
        ),
        migrations.AddIndex(
            model_name='espar',
            index=models.Index(fields=['ESPAR_code'], name='ESPAR_code_idx'),
        ),
    ]
